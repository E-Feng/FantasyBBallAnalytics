[{"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\index.js":"1","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\App.js":"3","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\Home.js":"4","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\Layout.js":"5","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\NavBar.js":"6","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\TeamStats.js":"7","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\webAPI.js":"8","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\matchupUtils.js":"9","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\containers\\MatchupTablesContainer.js":"10","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\containers\\TotalsContainer.js":"11","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\SliderRange.js":"12","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\MessageBoard.js":"13","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\TooltipHeader.js":"14","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\LoadingIcon.js":"15","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\DraftRecap.js":"16","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\containers\\DraftRecapContainer.js":"17","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\colorsUtil.js":"18","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\SeasonDropdown.js":"19","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\Compare.js":"20","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\containers\\CompareContainer.js":"21","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\CompareTable.js":"22","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\DraftRecapTable.js":"23","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\MatchupTable.js":"24","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\TotalsTable.js":"25","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\arrayMath.js":"26","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\CompareSummaryTable.js":"27","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\categoryUtils.js":"28","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\LeagueContext.js":"29","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\Error.js":"30"},{"size":609,"mtime":1635714386752,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1611000528590,"results":"33","hashOfConfig":"32"},{"size":3192,"mtime":1636433316698,"results":"34","hashOfConfig":"32"},{"size":1020,"mtime":1614296731993,"results":"35","hashOfConfig":"32"},{"size":650,"mtime":1636429913058,"results":"36","hashOfConfig":"32"},{"size":3270,"mtime":1636430319251,"results":"37","hashOfConfig":"32"},{"size":2648,"mtime":1636432290823,"results":"38","hashOfConfig":"32"},{"size":976,"mtime":1636431304693,"results":"39","hashOfConfig":"32"},{"size":1104,"mtime":1612824041517,"results":"40","hashOfConfig":"32"},{"size":3150,"mtime":1632004150291,"results":"41","hashOfConfig":"32"},{"size":3789,"mtime":1634774235165,"results":"42","hashOfConfig":"32"},{"size":2627,"mtime":1634773236840,"results":"43","hashOfConfig":"32"},{"size":5743,"mtime":1636405663470,"results":"44","hashOfConfig":"32"},{"size":1271,"mtime":1614110453953,"results":"45","hashOfConfig":"32"},{"size":2252,"mtime":1614474327583,"results":"46","hashOfConfig":"32"},{"size":1847,"mtime":1633589812421,"results":"47","hashOfConfig":"32"},{"size":2311,"mtime":1635201579730,"results":"48","hashOfConfig":"32"},{"size":655,"mtime":1633541681287,"results":"49","hashOfConfig":"32"},{"size":1489,"mtime":1636432322797,"results":"50","hashOfConfig":"32"},{"size":1795,"mtime":1633589754015,"results":"51","hashOfConfig":"32"},{"size":5344,"mtime":1633294688843,"results":"52","hashOfConfig":"32"},{"size":6723,"mtime":1633312248228,"results":"53","hashOfConfig":"32"},{"size":5711,"mtime":1632004087610,"results":"54","hashOfConfig":"32"},{"size":6536,"mtime":1632004090663,"results":"55","hashOfConfig":"32"},{"size":5658,"mtime":1632004093406,"results":"56","hashOfConfig":"32"},{"size":702,"mtime":1632033904742,"results":"57","hashOfConfig":"32"},{"size":6244,"mtime":1632085615306,"results":"58","hashOfConfig":"32"},{"size":827,"mtime":1633282228737,"results":"59","hashOfConfig":"32"},{"size":109,"mtime":1633575415493,"results":"60","hashOfConfig":"32"},{"size":931,"mtime":1636432487583,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"dew99m",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\index.js",[],["124","125"],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\App.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\Home.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\Layout.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\NavBar.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\TeamStats.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\webAPI.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\matchupUtils.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\containers\\MatchupTablesContainer.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\containers\\TotalsContainer.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\SliderRange.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\MessageBoard.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\TooltipHeader.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\LoadingIcon.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\DraftRecap.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\containers\\DraftRecapContainer.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\colorsUtil.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\SeasonDropdown.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\Compare.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\containers\\CompareContainer.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\CompareTable.js",["126"],"import React from 'react';\r\nimport { useTable } from 'react-table';\r\nimport styled from 'styled-components';\r\nimport { getHSLColor } from '../utils/colorsUtil';\r\nimport { categoryDetails, determineWinner } from '../utils/categoryUtils';\r\n\r\nfunction CompareTable(props) {\r\n  const data = props.data;\r\n  const summaryData = props.summaryData;\r\n  const currentWeek = props.currentWeek;\r\n  //const currentWeek = 5;\r\n\r\n  const numCompare = data.filter(\r\n    (row) => row.rowHeader === data[0].rowHeader\r\n  ).length;\r\n\r\n  const columns = React.useMemo(() => {\r\n    const weekArray = Array.from({ length: currentWeek }, (_, i) => i + 1);\r\n\r\n    return [\r\n      {\r\n        Header: 'Week',\r\n        columns: weekArray.map((week) => {\r\n          return { Header: `${week}`, accessor: `week${week}` };\r\n        }),\r\n      },\r\n    ];\r\n  }, [currentWeek]);\r\n\r\n  columns.unshift({\r\n    Header: '',\r\n    accessor: 'rowHeader',\r\n  });\r\n\r\n  const tableInstance = useTable({ columns, data });\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    tableInstance;\r\n\r\n  return (\r\n    <Container>\r\n      <TableContainer>\r\n        <Table {...getTableProps()}>\r\n          <thead>\r\n            {\r\n              // Loop over the header rows\r\n              headerGroups.map((headerGroup) => (\r\n                // Apply the header row props\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {\r\n                    // Loop over the headers in each row\r\n                    headerGroup.headers.map((column) => (\r\n                      // Apply the header cell props\r\n                      <th {...column.getHeaderProps()}>\r\n                        {\r\n                          // Render the header\r\n                          column.render('Header')\r\n                        }\r\n                      </th>\r\n                    ))\r\n                  }\r\n                </tr>\r\n              ))\r\n            }\r\n          </thead>\r\n          {/* Apply the table body props */}\r\n          <tbody {...getTableBodyProps()}>\r\n            {\r\n              // Loop over the table rows\r\n              rows.map((row) => {\r\n                //console.log(rows);\r\n                //console.log(row);\r\n                // Prepare the row for display\r\n                prepareRow(row);\r\n\r\n                // Conditional rendering for spanning row headers\r\n                const rowIndex = row.index + 1;\r\n                const isRowSpanned = rowIndex % numCompare;\r\n\r\n                // Conditional rendering for background\r\n                const vals = [];\r\n                rows.forEach((filterRow) => {\r\n                  const isSameHeader =\r\n                    filterRow.values.rowHeader === row.values.rowHeader;\r\n                  const isDifferentRow = filterRow.index !== row.index;\r\n                  if (isSameHeader && isDifferentRow) {\r\n                    vals.push(filterRow.values);\r\n                  }\r\n                });\r\n\r\n                return (\r\n                  // Apply the row props\r\n                  <tr\r\n                    {...row.getRowProps()}\r\n                    style={{\r\n                      borderBottom: !isRowSpanned\r\n                        ? '4px solid black'\r\n                        : '1px solid white',\r\n                    }}\r\n                  >\r\n                    {\r\n                      // Loop over the rows cells\r\n                      row.cells.map((cell) => {\r\n                        // Conditional rendering for row header span\r\n                        const headerId = cell.column.id;\r\n                        const isRowHeader = headerId === 'rowHeader';\r\n\r\n                        if (isRowHeader & !isRowSpanned) return null;\r\n\r\n                        // Conditional rendering for background\r\n                        const compare = vals.map((val) => {\r\n                          return val[headerId];\r\n                        });\r\n\r\n                        let color = 'gainsboro';\r\n                        const rowHeader = cell.row.original.rowHeader;\r\n                        const catId = cell.row.original.catId;\r\n\r\n                        const isWinner = determineWinner(\r\n                          cell.value,\r\n                          compare,\r\n                          catId\r\n                        );\r\n\r\n                        const inverse = categoryDetails[catId].inverse\r\n                          ? true\r\n                          : false;\r\n\r\n                        const mean = summaryData[rowHeader].mean;\r\n                        const stdev = summaryData[rowHeader].stdev;\r\n\r\n                        const mult = 2;\r\n                        const lo = mean - stdev * mult;\r\n                        const hi = mean + stdev * mult;\r\n\r\n                        color = isRowHeader\r\n                          ? color\r\n                          : getHSLColor(cell.value, lo, hi, inverse);\r\n\r\n                        // Apply the cell props\r\n                        return (\r\n                          <td\r\n                            {...cell.getCellProps()}\r\n                            style={{\r\n                              background: color,\r\n                              fontWeight: isRowHeader ? 'bold' : 'normal',\r\n                            }}\r\n                            rowSpan={\r\n                              isRowHeader & isRowSpanned ? numCompare : 1\r\n                            }\r\n                          >\r\n                            {\r\n                              // Render the cell contents\r\n                              cell.render('Cell')\r\n                            }\r\n                          </td>\r\n                        );\r\n                      })\r\n                    }\r\n                  </tr>\r\n                );\r\n              })\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  padding: 0.25rem;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 0 1px;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  font-family: Arial;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  color: black;\r\n\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n  border: 1px solid white;\r\n\r\n  th {\r\n    background: silver;\r\n    color: black;\r\n  }\r\n\r\n  tr {\r\n    :last-child {\r\n      td {\r\n        border-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  th,\r\n  td {\r\n    margin: 0;\r\n    padding: 0.25rem;\r\n    border-bottom: 1px solid white;\r\n    border-right: 1px solid white;\r\n\r\n    :last-child {\r\n      border-right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CompareTable;\r\n","C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\DraftRecapTable.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\MatchupTable.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\TotalsTable.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\arrayMath.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\tables\\CompareSummaryTable.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\utils\\categoryUtils.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\components\\LeagueContext.js",[],"C:\\Users\\Elvin\\Desktop\\Projects\\FantasyBBallAnalytics\\client\\src\\pages\\Error.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":119,"column":31,"nodeType":"133","messageId":"134","endLine":119,"endColumn":39},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'isWinner' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]